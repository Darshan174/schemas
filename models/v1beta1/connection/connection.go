// Package connection provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package connection

import (
	"database/sql"
	"time"

	"github.com/gofrs/uuid"
	"github.com/meshery/schemas/models/v1beta1/environment"
)

// Defines values for ConnectionStatus.
const (
	Connected    ConnectionStatus = "connected"
	Deleted      ConnectionStatus = "deleted"
	Disconnected ConnectionStatus = "disconnected"
	Discovered   ConnectionStatus = "discovered"
	Ignored      ConnectionStatus = "ignored"
	Maintenance  ConnectionStatus = "maintenance"
	NotFound     ConnectionStatus = "not found"
	Registered   ConnectionStatus = "registered"
)

// Connection Meshery Connections are managed and unmanaged resources that either through discovery or manual entry are tracked by Meshery. Learn more at https://docs.meshery.io/concepts/logical/connections
type Connection struct {
	// ID ID
	ID uuid.UUID `db:"id" json:"id" yaml:"id"`

	// Name Connection Name
	Name string `db:"name" json:"name" yaml:"name"`

	// CredentialID Credential ID
	CredentialID uuid.UUID `db:"credential_id" json:"credential_id" yaml:"credential_id"`

	// Type Connection Type
	Type string `db:"type" json:"type" yaml:"type"`

	// SubType Connection Subtype
	SubType string `db:"sub_type" json:"sub_type" yaml:"sub_type"`

	// Kind Connection Kind
	Kind     string  `db:"kind" json:"kind" yaml:"kind"`
	Metadata JSONMap `db:"metadata" json:"metadata" yaml:"metadata"`

	// Status Connection Status
	Status ConnectionStatus `db:"status" json:"status" yaml:"status"`

	// UserID A Universally Unique Identifier used to uniquely identify entites in Meshery. The UUID core defintion is used across different schemas.
	UserID       uuid.UUID                 `db:"user_id" json:"user_id" yaml:"user_id"`
	CreatedAt    time.Time                 `db:"created_at" json:"created_at,omitempty" yaml:"created_at,omitempty"`
	UpdatedAt    time.Time                 `db:"updated_at" json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
	DeletedAt    sql.NullTime              `db:"deleted_at" json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	Environments []environment.Environment `db:"environments" gorm:"-" json:"environments" yaml:"environments"`
}

// ConnectionStatus Connection Status
type ConnectionStatus string
