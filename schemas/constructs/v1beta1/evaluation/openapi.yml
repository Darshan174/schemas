openapi: 3.0.0
info:
  title: evaluation
  version: 1.0.0
  description: API for evaluating relationships in Meshery designs

paths:
  /evaluate:
    post:
      summary: Evaluate relationships in a design
      description: Performs relationship evaluation on a given design, applying policies and updating components and relationships as needed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluationRequest"
      responses:
        "200":
          description: Successful evaluation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluationResponse"
        "400":
          description: Bad request
        "500":
          description: Internal server error

components:
  schemas:
    EvaluationRequest:
      type: object
      required:
        - design
      properties:
        design:
          $ref: ../design/design.json

          "x-go-type": "pattern.PatternFile"
          "x-go-type-import":
            "path": "github.com/meshery/schemas/models/v1beta1/pattern"

        options:
          type: object
          properties:
            returnDiffOnly:
              type: boolean
              description: If true, only return the diff of changes instead of the complete updated design
            enableTrace:
              type: boolean
              description: If true, include detailed trace information in the response

    EvaluationResponse:
      type: object
      description: Schema for the response of a relationship evaluation process in Meshery
      required:
        - schemaVersion
        - design
        - actions
      properties:
        schemaVersion:
          type: string
          description: Specifies the version of the schema to which the evaluation response conforms.

        design:
          $ref: ../design/design.json

          "x-go-type": "pattern.PatternFile"
          "x-go-type-import":
            "path": "github.com/meshery/schemas/models/v1beta1/pattern"

          description: The final evaluated design, including all updated components and relationships. This can be either the complete updated design or only a diff of changes. The version of the design will be automatically incremented if any modifications are made during the evaluation process. This field provides a comprehensive view of the design state after all relationship evaluations and policy applications have been completed.

        evaluationHash:
          type: string
          description: Hash of the input parameters and configuration used for this evaluation. Useful for identifying duplicate evaluations or caching results.
          example: "a1b2c3d4e5f6g7h8i9j0"

        timestamp:
          type: string
          format: date-time
          description: ISO 8601 formatted timestamp of when the evaluation was completed.

        actions:
          type: array
          item:
            $ref: "#/components/schemas/Action"

    Action:
      type: object
      required:
        - op
        - value
      properties:
        op:
          type: string
          enum:
            [
              "update_component",
              "update_component_configuration",
              "add_component",
              "delete_component",
              "add_relationship",
              "update_relationship",
              "delete_relationship",
            ]
        value:
          type: object

    UpdateComponentOp:
      type: object
      properties:
        op:
          type: string
          enum: [update_component]
        value:
          type: object
          required: [id, path, value]
          properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
            value: {}
            mode:
              type: string
              enum: [replace, merge]
              default: replace

    UpdateComponentConfigurationOp:
      type: object
      properties:
        op:
          type: string
          enum: [update_component_configuration]
        value:
          type: object
          required: [id, path, value]
          properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
            value: {}
            mode:
              type: string
              enum: [replace, merge]
              default: replace

    DeleteComponentOp:
      type: object
      properties:
        op:
          type: string
          enum: [delete_component]
        value:
          type: object
          required: [id]
          properties:
            id:
              type: string

    AddComponentOp:
      type: object
      properties:
        op:
          type: string
          enum: [add_component]
        value:
          type: object
          required: [item]
          properties:
            item:
              $ref: "#/components/schemas/ComponentDeclaration"

    UpdateRelationshipOp:
      type: object
      properties:
        op:
          type: string
          enum: [update_relationship]
        value:
          type: object
          required: [id, path, value]
          properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
            value: {}

    DeleteRelationshipOp:
      type: object
      properties:
        op:
          type: string
          enum: [delete_relationship]
        value:
          type: object
          required: [id]
          properties:
            id:
              type: string

    AddRelationshipOp:
      type: object
      properties:
        op:
          type: string
          enum: [add_relationship]
        value:
          type: object
          required: [item]
          properties:
            item:
              $ref: "#/components/schemas/RelationshipDeclaration"

    ComponentDeclaration:
      type: object
      # Define your component declaration schema here
      additionalProperties: true

    RelationshipDeclaration:
      type: object
      # Define your relationship declaration schema here
      additionalProperties: true
    # trace:
    #   type: object
    #   description: A detailed trace of the evaluation process, including actions taken and changes made.
    #   properties:
    #     policyActions:
    #       type: array
    #       description: List of policy actions applied during the evaluation.
    #       items:
    #         type: string
    #     relationshipsAdded:
    #       type: array
    #       description: List of new relationships added to the design.
    #       items:
    #         $ref: ../v1alpha3/relationship.json
    #     relationshipsUpdated:
    #       type: array
    #       description: List of relationships updated in the design.
    #     relationshipsRemoved:
    #       type: array
    #       description: List of relationships removed from the design.
    #       items:
    #         $ref: ../v1alpha3/relationship.json
    #     componentsAdded:
    #       type: array
    #       description: List of new components added to the design.
    #       items:
    #         $ref: ../v1beta1/component.json
    #     componentsUpdated:
    #       type: array
    #       description: List of components updated in the design.
    #       items:
    #         $ref: ../v1beta1/component.json
    #     componentsRemoved:
    #       type: array
    #       description: List of components removed from the design.
    #       items:
    #         $ref: ../v1beta1/component.json

    # required:
    #   - policyActions
    #   - relationshipsAdded
    #   - relationshipsRemoved
    #   - componentsAdded
    #   - componentsRemoved
